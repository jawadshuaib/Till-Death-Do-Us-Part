{"remainingRequest":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/thread-loader/dist/cjs.js!/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/babel-loader/lib/index.js!/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/eslint-loader/index.js??ref--13-0!/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/src/web3.js","dependencies":[{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/src/web3.js","mtime":1552368907579},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Web3 from \"web3\";\nvar web3;\n\nif (window.ethereum) {\n  // metamask is available\n  window.ethereum.enable();\n  web3 = new Web3(window.web3.currentProvider);\n} else if (typeof window !== \"undefined\" && typeof window.web3 !== \"undefined\") {\n  // metamask is running\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  //user is not running metamask\n  // create provider through infura\n  var provider = new Web3.providers.HttpProvider( // pass url of remote node\n  \"https://rinkeby.infura.io/v3/daaf8c15d76a4556b09db84a80530814\");\n  web3 = new Web3(provider);\n}\n\nexport default web3;",{"version":3,"sources":["/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/src/web3.js"],"names":["Web3","web3","window","ethereum","enable","currentProvider","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,IAAIC,IAAJ;;AACA,IAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB;AACAD,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAH,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYI,eAArB,CAAP;AACD,CAJD,MAIO,IACL,OAAOH,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAACD,IAAd,KAAuB,WAFlB,EAGL;AACA;AACAA,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYI,eAArB,CAAP;AACD,CANM,MAMA;AACL;AACA;AACA,MAAMC,QAAQ,GAAG,IAAIN,IAAI,CAACO,SAAL,CAAeC,YAAnB,EACf;AACA,iEAFe,CAAjB;AAIAP,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASM,QAAT,CAAP;AACD;;AACD,eAAeL,IAAf","sourcesContent":["import Web3 from \"web3\";\nlet web3;\nif (window.ethereum) {\n  // metamask is available\n  window.ethereum.enable();\n  web3 = new Web3(window.web3.currentProvider);\n} else if (\n  typeof window !== \"undefined\" &&\n  typeof window.web3 !== \"undefined\"\n) {\n  // metamask is running\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  //user is not running metamask\n  // create provider through infura\n  const provider = new Web3.providers.HttpProvider(\n    // pass url of remote node\n    \"https://rinkeby.infura.io/v3/daaf8c15d76a4556b09db84a80530814\"\n  );\n  web3 = new Web3(provider);\n}\nexport default web3;\n"]}]}