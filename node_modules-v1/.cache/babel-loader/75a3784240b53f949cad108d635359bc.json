{"remainingRequest":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/babel-loader/lib/index.js!/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/src/components/TextForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/src/components/TextForm.vue","mtime":1553125213987},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport commonHelpers from \"@/helpers/common\";\nimport blockchainHelpers from \"@/helpers/blockchain\";\nimport web3 from \"./../web3\";\nimport notesContract from \"./../notes\";\nimport CryptoJS from \"crypto-js\";\nglobal.jQuery = require(\"jquery\");\nvar $ = global.jQuery;\nwindow.$ = $;\nexport default {\n  name: \"TextForm\",\n  data: function data() {\n    return {\n      contract: {\n        owner: null,\n        transactionHash: null\n      },\n      networks: {\n        test: \"Test Network\",\n        blockchain: \"Blockchain\"\n      },\n      genericNote: \"Write a note you wish to save on the Ethereum\",\n      isTest: true,\n      note: null,\n      form: {\n        note: \"\",\n        secretKey: \"\",\n        token: \"\"\n      },\n      error: null\n    };\n  },\n  methods: {\n    selectNetwork: function selectNetwork(e) {\n      if (e.target.checked) {\n        this.isTest = false;\n      } else {\n        this.isTest = true;\n      }\n    },\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var token, canSubmit, dt, dateCreated;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.form.token = commonHelpers.generateRandomDigits(8);\n                this.form.secretKey = commonHelpers.generateRandomDigits(8);\n                token = this.form.token;\n                canSubmit = false;\n\n                if (this.isFormValid()) {\n                  canSubmit = true;\n                }\n\n                _context.next = 7;\n                return blockchainHelpers.doesTokenExist(token);\n\n              case 7:\n                if (_context.sent) {\n                  _context.next = 11;\n                  break;\n                }\n\n                canSubmit = true;\n                _context.next = 13;\n                break;\n\n              case 11:\n                canSubmit = false;\n                this.error = \"A note with this token already exists. Please refresh and try again!\";\n\n              case 13:\n                if (canSubmit) {\n                  dt = new Date();\n                  dateCreated = dt.getTime();\n                  this.createNote(token, dateCreated, this.form.note);\n                }\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    isFormValid: function isFormValid() {\n      this.error = null;\n\n      if (this.form.note === \"\" || this.form.secretKey === \"\") {\n        this.error = \"Please write a note.\";\n      }\n\n      return this.error === null ? true : false;\n    },\n    // encryptNote(note) {\n    //   return CryptoJS.AES.encrypt(note, this.form.secretKey).toString();\n    // },\n    createNote: function () {\n      var _createNote = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(token, dateCreated, note) {\n        var _this = this;\n\n        var account, err;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return blockchainHelpers.getAccount();\n\n              case 2:\n                account = _context2.sent;\n\n                if (account === null) {\n                  err = \"Please log into metamask account to proceed.\";\n                  this.error = err;\n                  alert(err);\n                }\n\n                if (!(this.error === null)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                // encrypt the note\n                note = commonHelpers.encryptAES(note, this.form.secretKey);\n                _context2.next = 8;\n                return notesContract.methods.createNote(token, dateCreated, commonHelpers.encryptSHA256(account), note).send({\n                  from: account\n                }).on(\"transactionHash\", function (tx) {\n                  _this.contract.transactionHash = tx;\n                  runProgressBar(); // this.$emit(\"animate\", { action: true });\n                }).on(\"confirmation\", function () {\n                  // this.$emit(\"animate\", { action: false });\n                  _this.$router.push({\n                    name: \"TransactionDetails\",\n                    params: {\n                      transaction_id: _this.contract.transactionHash,\n                      token: _this.form.token,\n                      secretKey: _this.form.secretKey,\n                      whichNetwork: _this.isTest === true ? \"rinkeby\" : \"mainnet\"\n                    }\n                  });\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createNote(_x, _x2, _x3) {\n        return _createNote.apply(this, arguments);\n      }\n\n      return createNote;\n    }()\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3() {\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return notesContract.methods.owner().call();\n\n            case 2:\n              this.contract.owner = _context3.sent;\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }() // updated() {\n  //   $(document).ready(function() {\n  //     // resize textarea\n  //     // M.updateTextFields();\n  //     // M.textareaAutoResize($(\"#note\"));\n  //   });\n  //   // $(\"document\").on(\"keypress\", function(e) {\n  //   //   $(\"#note\").focus();\n  //   // });\n  // }\n\n};\n$(document).ready(function () {\n  // keep waves at the bottom as additional lines of the note are added\n  $(\"#note\").on(\"keypress\", function (e) {\n    var text = $(this).val();\n    var lines = text.split(/\\r|\\r\\n|\\n/);\n    var totalLines = lines.length;\n\n    if (totalLines > 3) {\n      if (e.which == 13) {\n        $(\".ocean\").css(\"bottom\", \"-\".concat(totalLines * 48, \"px\"));\n      }\n    }\n  });\n});\n\nfunction runProgressBar() {\n  var container = document.getElementById(\"progress-bar-container\");\n  container.style.display = \"block\";\n  var elem = document.getElementById(\"progress-bar\");\n  var width = 0;\n  var id = setInterval(frame, 200);\n\n  function frame() {\n    if (width >= 100) {\n      elem.innerHTML = \"Your note has been submitted successfully! Stand by...\";\n      clearInterval(id);\n    } else {\n      width++;\n      elem.style.width = width + \"%\";\n      elem.innerHTML = width * 1 + \"%\";\n    }\n  }\n}",{"version":3,"sources":["TextForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col s6 col-first hide-on-small-only\">\n      <div class=\"project-desc-container\">\n        <div class=\"project-desc\">\n          <div class=\"logo\">\n            <img src=\"../assets/logo.png\">\n          </div>\n          <div class=\"headline\">Is there is a message you would like to securely save forever?</div>\n          <div\n            class=\"desc\"\n          >Use the blockchain to store and share a message only you or your loved ones can view.</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col s6 col-second valign-wrapper align-center\">\n      <form class=\"form-container\">\n        <div>\n          <div id=\"progress-bar-container\">\n            <div class=\"progress-bar-light-grey\">\n              <div\n                id=\"progress-bar\"\n                class=\"progress-bar-strip progress-bar-green progress-bar-center\"\n                style=\"width:0%\"\n              >0%</div>\n            </div>\n          </div>\n          <div class=\"input-field\">\n            <textarea id=\"note\" v-model=\"form.note\" class=\"materialize-textarea active\"></textarea>\n            <label for=\"note\" v-if=\"isTest\">{{ genericNote }} {{ networks.test }}.</label>\n            <label for=\"note\" v-else>{{ genericNote }} {{ networks.blockchain }}.</label>\n          </div>\n          <div>\n            <button\n              class=\"btn waves-effect waves-light btn-large submit-btn\"\n              type=\"submit\"\n              name=\"action\"\n              @click.prevent=\"submitForm()\"\n            >\n              Save on the\n              <span v-if=\"isTest\">{{ networks.test }}</span>\n              <span v-else>{{ networks.blockchain }}</span>\n              <i class=\"material-icons right\">send</i>\n            </button>\n            <div>\n              <div class=\"error\" v-if=\"error!==null\">{{ error }}</div>\n            </div>\n            <div>\n              <label>\n                <input type=\"checkbox\" v-on:click=\"selectNetwork($event)\">\n                <span>Permanently Save on the Blockchain (Costs Ether)</span>\n              </label>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport commonHelpers from \"@/helpers/common\";\nimport blockchainHelpers from \"@/helpers/blockchain\";\n\nimport web3 from \"./../web3\";\nimport notesContract from \"./../notes\";\n\nimport CryptoJS from \"crypto-js\";\n\nglobal.jQuery = require(\"jquery\");\nvar $ = global.jQuery;\nwindow.$ = $;\n\nexport default {\n  name: \"TextForm\",\n  data() {\n    return {\n      contract: {\n        owner: null,\n        transactionHash: null\n      },\n      networks: {\n        test: \"Test Network\",\n        blockchain: \"Blockchain\"\n      },\n      genericNote: \"Write a note you wish to save on the Ethereum\",\n      isTest: true,\n      note: null,\n      form: {\n        note: \"\",\n        secretKey: \"\",\n        token: \"\"\n      },\n      error: null\n    };\n  },\n  methods: {\n    selectNetwork(e) {\n      if (e.target.checked) {\n        this.isTest = false;\n      } else {\n        this.isTest = true;\n      }\n    },\n    async submitForm() {\n      this.form.token = commonHelpers.generateRandomDigits(8);\n      this.form.secretKey = commonHelpers.generateRandomDigits(8);\n\n      const token = this.form.token;\n\n      let canSubmit = false;\n      if (this.isFormValid()) {\n        canSubmit = true;\n      }\n\n      if (!(await blockchainHelpers.doesTokenExist(token))) {\n        canSubmit = true;\n      } else {\n        canSubmit = false;\n        this.error =\n          \"A note with this token already exists. Please refresh and try again!\";\n      }\n\n      if (canSubmit) {\n        const dt = new Date();\n        const dateCreated = dt.getTime();\n\n        this.createNote(token, dateCreated, this.form.note);\n      }\n    },\n    isFormValid() {\n      this.error = null;\n      if (this.form.note === \"\" || this.form.secretKey === \"\") {\n        this.error = \"Please write a note.\";\n      }\n      return this.error === null ? true : false;\n    },\n    // encryptNote(note) {\n    //   return CryptoJS.AES.encrypt(note, this.form.secretKey).toString();\n    // },\n    async createNote(token, dateCreated, note) {\n      // submit the form\n      const account = await blockchainHelpers.getAccount();\n      if (account === null) {\n        const err = \"Please log into metamask account to proceed.\";\n        this.error = err;\n        alert(err);\n      }\n\n      if (this.error === null) {\n        // encrypt the note\n        note = commonHelpers.encryptAES(note, this.form.secretKey);\n        await notesContract.methods\n          .createNote(\n            token,\n            dateCreated,\n            commonHelpers.encryptSHA256(account),\n            note\n          )\n          .send({\n            from: account\n          })\n          .on(\"transactionHash\", tx => {\n            this.contract.transactionHash = tx;\n            runProgressBar();\n            // this.$emit(\"animate\", { action: true });\n          })\n          .on(\"confirmation\", () => {\n            // this.$emit(\"animate\", { action: false });\n            this.$router.push({\n              name: \"TransactionDetails\",\n              params: {\n                transaction_id: this.contract.transactionHash,\n                token: this.form.token,\n                secretKey: this.form.secretKey,\n                whichNetwork: this.isTest === true ? \"rinkeby\" : \"mainnet\"\n              }\n            });\n          });\n      }\n    }\n  },\n  async created() {\n    this.contract.owner = await notesContract.methods.owner().call();\n  }\n  // updated() {\n  //   $(document).ready(function() {\n  //     // resize textarea\n  //     // M.updateTextFields();\n  //     // M.textareaAutoResize($(\"#note\"));\n  //   });\n  //   // $(\"document\").on(\"keypress\", function(e) {\n  //   //   $(\"#note\").focus();\n  //   // });\n  // }\n};\n\n$(document).ready(function() {\n  // keep waves at the bottom as additional lines of the note are added\n  $(\"#note\").on(\"keypress\", function(e) {\n    const text = $(this).val();\n    const lines = text.split(/\\r|\\r\\n|\\n/);\n    const totalLines = lines.length;\n\n    if (totalLines > 3) {\n      if (e.which == 13) {\n        $(\".ocean\").css(\"bottom\", `-${totalLines * 48}px`);\n      }\n    }\n  });\n});\n\nfunction runProgressBar() {\n  const container = document.getElementById(\"progress-bar-container\");\n  container.style.display = \"block\";\n\n  let elem = document.getElementById(\"progress-bar\");\n  let width = 0;\n  let id = setInterval(frame, 200);\n  function frame() {\n    if (width >= 100) {\n      elem.innerHTML = \"Your note has been submitted successfully! Stand by...\";\n      clearInterval(id);\n    } else {\n      width++;\n      elem.style.width = width + \"%\";\n      elem.innerHTML = width * 1 + \"%\";\n    }\n  }\n}\n</script>\n\n<style scoped>\n#progress-bar-indeterminate {\n  display: none;\n}\n.col-second {\n  top: 0;\n  min-height: 100vh;\n  background-color: #fff;\n}\n.project-desc-container {\n  position: absolute;\n  top: 35%;\n  transform: translateY(-50%);\n  text-align: center;\n  width: 48%;\n}\n.project-desc .logo img {\n  max-width: 150px;\n}\n.project-desc .headline {\n  color: #2bbbad;\n  font-size: 32px;\n  font-weight: 800;\n}\n.project-desc .desc {\n  color: #757575;\n  font-size: 16px;\n}\n.form-container {\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 600px;\n  width: 100%;\n  position: relative;\n  /* top: 50%;\n  transform: translateY(-50%); */\n}\n#progress-bar-container {\n  display: none;\n}\n.progress-bar-strip,\n.progress-bar-panel {\n  padding: 0.01em 16px;\n}\n.progress-bar-green,\n.progress-bar-hover-green:hover {\n  color: #fff;\n  background-color: #4caf50;\n}\n.progress-bar-center {\n  text-align: center;\n}\n.card-panel {\n  background-color: #fff;\n}\n#note,\nlabel,\n#password {\n  font-size: 22px;\n  font-weight: lighter;\n  color: #757575;\n}\n#note,\nlabel {\n  width: 600px;\n}\n\n@media only screen and (max-width: 600px) {\n  .col-second {\n    background: none;\n  }\n  .submit-btn {\n    width: 300px;\n  }\n}\n</style>"],"sourceRoot":"src/components"}]}