{"remainingRequest":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part-v2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part-v2/src/components/Note.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part-v2/src/components/Note.vue","mtime":1552342490000},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part-v2/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part-v2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part-v2/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part-v2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jawadshuaib/Desktop/js/vue-projects/till-death-do-us-part-v2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#secretKey,\nlabel {\n  font-size: 22px;\n  font-weight: lighter;\n  color: #757575;\n}\n",{"version":3,"sources":["Note.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA","file":"Note.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"row\">\n    <Header></Header>\n    <div class=\"container\">\n      <div class=\"card flow-text\" v-if=\"!decrypted\">\n        <div class=\"card-content\">\n          <p>Access the Encrypted Note</p>\n          <div class=\"row\">\n            <div class=\"input-field col s12\">\n              <input id=\"secretKey\" type=\"text\" v-model=\"contract.secretKey\">\n              <label for=\"secretKey\">Secret Key</label>\n            </div>\n            <div class=\"error\" v-if=\"error!==null\">{{ error }}</div>\n          </div>\n        </div>\n        <div class=\"card-action\">\n          <button class=\"waves-effect waves-light btn-large\" @click.prevent=\"getNote ()\">\n            <i class=\"material-icons left\">wrap_text</i>Retrieve Note\n          </button>\n        </div>\n      </div>\n      <div class=\"card flow-text\" v-else>\n        <div class=\"card-content\">\n          <p>Decrypted Note from the Blockchain</p>\n          <blockquote>{{ contract.note }}</blockquote>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Header from \"./Header.vue\";\nimport commonHelpers from \"@/helpers/common\";\nimport blockchainHelpers from \"@/helpers/blockchain\";\n\nimport web3 from \"./../web3\";\nimport notesContract from \"./../notes\";\n\nimport CryptoJS from \"crypto-js\";\n\nexport default {\n  name: \"Note\",\n  data() {\n    return {\n      contract: {\n        token: this.$route.params.token,\n        whichNetwork: this.$route.params.whichNetwork,\n        secretKey: \"\",\n        note: \"\"\n      },\n      decrypted: false,\n      error: null\n    };\n  },\n  components: {\n    Header\n  },\n  created() {\n    // redirect if invalid token\n    if (!blockchainHelpers.doesTokenExist(this.contract.token)) {\n      //   this.$router.push({\n      //     name: \"/\"\n      //   });\n    }\n  },\n  methods: {\n    async getNote() {\n      this.error = null;\n      let shouldGetNote = false;\n      const secretKey = this.contract.secretKey;\n      if (secretKey !== \"\") {\n        shouldGetNote = true;\n      } else {\n        this.error = \"Please enter a secret key to access this note.\";\n      }\n\n      if (shouldGetNote) {\n        const c = await notesContract.methods\n          .getNote(this.contract.token)\n          .call();\n\n        let note = \"\";\n        if (c[1] !== \"\") {\n          note = CryptoJS.AES.decrypt(c[1], secretKey).toString(\n            CryptoJS.enc.Utf8\n          );\n        } else {\n          this.error = \"Unable to retrieve note from the blockchain.\";\n        }\n\n        if (note !== \"\") {\n          this.contract.note = note;\n          this.decrypted = true;\n        } else {\n          this.error = \"Incorrect secret key provided. Please try again.\";\n        }\n      }\n    }\n    // getNote() {\n    //   console.log(this.contract.token);\n    //   console.log(this.contract.whichNetwork);\n    // }\n  }\n};\n</script>\n<style>\n#secretKey,\nlabel {\n  font-size: 22px;\n  font-weight: lighter;\n  color: #757575;\n}\n</style>\n"]}]}